{"version":3,"sources":["redux/actions/songs.js","redux/reducers/songs.js","redux/reducers/index.js","constants/index.js","services/api/axios.js","services/api/songs.js","sagas/songs.js","sagas/index.js","selectors/search.js","components/atoms/Heading.js","components/atoms/Select.js","components/molecules/SongCard.js","components/molecules/SearchBar.js","components/atoms/Loading.js","components/organisms/Songs.js","pages/main.js","App.js","reportWebVitals.js","index.js"],"names":["GET_SONGS","RECEIVE_SONGS","SEARCH_TEXT","ON_ERROR","initialState","searchText","songs","error","receiveSongs","state","action","type","payload","data","feed","results","search","rootReducer","combineReducers","API","PROXY","SONG_CATEGORIES","title","value","get","url","axios","category","limit","callSongsApi","param","call","result","put","takeLatest","actions","root","all","fork","filteredSongsArtistName","filter","song","artistName","toLowerCase","indexOf","filteredSongsName","name","concat","Heading","text","className","Select","defaultValue","onChange","options","map","option","SongCard","imgsrc","src","SearchBar","label","placeholder","Loading","Songs","seleceDefaultValue","onSearch","onSelect","console","info","length","index","artworkUrl100","connect","getSongs","getSearch","props","useState","setSearch","React","songCategory","setSongCategory","useEffect","event","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","rootSaga","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae4773f6.chunk.js","sourcesContent":["export const GET_SONGS = 'GET_SONGS';\nexport const RECEIVE_SONGS = 'RECEIVE_SONGS';\nexport const SEARCH_TEXT = 'SEARCH_TEXT';\nexport const ON_ERROR = 'ON_ERROR';\n\nexport function getSongs(category) {\n  return {\n    type: GET_SONGS,\n    category,\n  };\n}\n\nexport function getSearch(search) {\n  return {\n    type: SEARCH_TEXT,\n    search,\n  };\n}\n\nexport function receiveSongs(payload) {\n  return {\n    type: RECEIVE_SONGS,\n    payload,\n  };\n}\n\nexport function onError() {\n  return {\n    type: ON_ERROR,\n  };\n}\n","import { RECEIVE_SONGS, SEARCH_TEXT, ON_ERROR } from '../actions/songs';\n\nconst initialState = {\n  searchText: '',\n  songs: [],\n  error: null,\n};\n\nfunction receiveSongs(state = initialState, action) {\n  switch (action.type) {\n    case RECEIVE_SONGS:\n      return {\n        ...state,\n        songs: action.payload && action.payload.data.feed.results\n      };\n    case SEARCH_TEXT:\n      return {\n        ...state,\n        searchText: action.search\n      };\n    case ON_ERROR:\n      return {\n        ...state,\n        error: true \n      };\n    default:\n      return state;\n  }\n}\n\nexport default receiveSongs;\n","import { combineReducers } from 'redux';\nimport { default as songs } from './songs';\n\nconst rootReducer = combineReducers({\n  songs,\n})\n\nexport default function root(state, action) {\n  return rootReducer(state, action);\n}\n","export const API = 'https://rss.itunes.apple.com';\nexport const PROXY = 'https://cors-anywhere.herokuapp.com/';\nexport const SONG_CATEGORIES = [\n  { title: 'Top Albums', value: 'top-albums' },\n\t{ title: 'Top Songs', value: 'top-songs' },\n\t{ title: 'Hot Tracks', value: 'hot-tracks' },\n\t{ title: 'New Releases', value: 'new-releases' },\n\t{ title: 'Coming Soon', value: 'coming-soon' }\n];\n","import axios from 'axios';\n\nexport function get(url) {  \n  return axios.get(url);\n}\n","import { API, PROXY } from '../../constants';\nimport { get } from './axios';\n\nexport function songs(category, limit = 100) {\n  const url = API + `/api/v1/us/apple-music/${category}/all/${limit}/non-explicit.json`;\n\n  return get(PROXY + url);\n}\n","import { put, call, takeLatest } from 'redux-saga/effects';\nimport * as actions from '../redux/actions/songs';\nimport { songs } from '../services/api/songs';\n\nexport function* callSongsApi(param) {\n  try {\n    const result = yield call(songs, param && param.category || 'top-albums');\n    yield put(actions.receiveSongs(result));\n  } catch(error) {\n    yield put(actions.onError(error));\n  }\n}\n\nexport function* receiveSongs() {\n  yield takeLatest(actions.GET_SONGS, callSongsApi);\n}\n","import { fork, all } from 'redux-saga/effects';\nimport { receiveSongs } from './songs';\n\nexport default function* root() {\n  yield all([\n    fork(receiveSongs),\n  ]);\n}\n","export default function search(state) {\n  const songs = state && state.songs && state.songs.songs || [];\n  const searchText = state && state.songs && state.songs.searchText || '';\n\n  const filteredSongsArtistName = songs.filter(song => {\n    return song && song.artistName && song.artistName.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;\n  })\n\n  const filteredSongsName = songs.filter(song => {\n    return song && song.name.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;\n  })\n  \n  return filteredSongsArtistName.concat(filteredSongsName);\n}\n","import React from 'react';\n\nconst Heading = ({ text }) => {\n  return (\n    <div className=\"col-12\">\n      <h4>{text}</h4>\n    </div>\n  );\n}\n\nexport default Heading;\n","import React from 'react';\n\nconst Select = ({ defaultValue, onChange, options }) => {\n\treturn (\n\t\t<div className=\"col-6\">\n\t\t\t<select defaultValue={defaultValue} onChange={onChange} className=\"form-control margin-btm\">\n\t\t\t\t{\n\t\t\t\t\toptions && options.map((option) => (\n\t\t\t\t\t\t\t<option key={option.value} value={option.value}>{option.title}</option>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</select>\n\t\t</div>\n\t);\n}\n\nexport default Select;\n","import React from 'react';\n\nconst SongCard = ({imgsrc ,text }) => {\n\treturn (\n\t\t<div className=\"col-md-4\">\n\t\t\t<div className=\"song-card margin-bottom\">\n\t\t\t\t<img src={imgsrc} />\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"text\">{text}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default SongCard;","import React from 'react';\n\nconst SearchBar = ({ label, value, onChange, placeholder }) => {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"col-12\"><h4>{label}</h4></div>\n\t\t\t<div className=\"col-12\">\n\t\t\t\t<input placeholder={placeholder} type=\"text\" className=\"form-control margin-btm\" value={value} onChange={onChange} />\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default SearchBar;\n","\nimport React from 'react';\n\nconst Loading = ({ text }) => {\n  return (\n    <div className=\"row loading\">\n      Loading....\n    </div>\n  );\n}\n\nexport default Loading;\n","import React from 'react';\nimport Heading from '../atoms/Heading';\nimport Select from '../atoms/Select';\nimport SongCard from '../molecules/SongCard';\nimport SearchBar from '../molecules/SearchBar';\nimport Loading from '../atoms/Loading';\nimport { SONG_CATEGORIES } from '../../constants';\nimport './songs.css';\n\nconst Songs = ({ seleceDefaultValue, searchText, onSearch, onSelect, songs }) => {\n\tconsole.info('songs', songs)\n\treturn (\n\t\t<div className=\"songs\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<Heading text='Select Songs Category' />\n\t\t\t\t<Select defaultValue={seleceDefaultValue} onChange={onSelect} options={SONG_CATEGORIES} />\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<SearchBar value={searchText} label='Search' placeholder='Search By Artist Name Or Song Name' onChange={onSearch} />\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<Heading text={`${songs.length} Results Found`} />\n\t\t\t\t{ songs.length ?\n\t\t\t\t\tsongs.map((song, index) => (\n\t\t\t\t\t\t<SongCard key={index} imgsrc={song.artworkUrl100} text={song.artistName || song.name} />\n\t\t\t\t\t))\n\t\t\t\t\t: <Loading />\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Songs;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getSongs, getSearch } from '../redux/actions/songs';\nimport search from '../selectors/search';\nimport Songs from '../components/organisms/Songs';\n\nfunction Main(props) {\n  const [search, setSearch] = useState('');\n  const [songCategory, setSongCategory] = React.useState('top-albums');\n\n  const onSelect = (event) => {\n    setSongCategory(event.target.value);\n  }\n\n  const onChange = (event) => {   \n    props.getSearch(event.target.value);\n    setSearch(event.target.value);\n  }\n\n  useEffect(() => {\n    props.getSongs(songCategory)\n  }, [songCategory]);\n\n  return (\n    <Songs seleceDefaultValue={songCategory} searchText={search} onSearch={onChange} onSelect={onSelect} songs={props.songs} />\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    songs: search(state)\n  };\n}\n\nexport default connect(mapStateToProps, { getSongs, getSearch })(Main);\n","import Main from './pages/main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './redux/reducers';\nimport rootSaga from './sagas';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(sagaMiddleware)\n);\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}